<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on zzamboni.org</title>
    <link>http://zzamboni.org/tags/ruby/</link>
    <description>Recent content in Ruby on zzamboni.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Mar 2010 01:03:52 -0600</lastBuildDate>
    
	<atom:link href="http://zzamboni.org/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Capturing multiple matches in Ruby</title>
      <link>http://zzamboni.org/post/2010-03-31-capturing-multiple-matches-in-ruby/</link>
      <pubDate>Wed, 31 Mar 2010 01:03:52 -0600</pubDate>
      
      <guid>http://zzamboni.org/post/2010-03-31-capturing-multiple-matches-in-ruby/</guid>
      <description>To collect all regex matches in a string into an array, pass the regexp object to the string&#39;s scan() method, e.g.: myarray = mystring.scan(/regex/). Sometimes, it is easier to create a regex to match the delimiters rather than the text you are interested in. In that case, use the split() method instead, e.g.: myarray = mystring.split(/delimiter/). The split() method discards all regex matches, returning the text between the matches. The scan() method does the opposite.</description>
    </item>
    
  </channel>
</rss>